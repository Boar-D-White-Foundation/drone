package neetcode

import (
	_ "embed"
	"encoding/json"
	"fmt"
	"slices"
)

const (
	QuestionsTotalCount = 150
)

// auto-generated by command
// python ./cmd/python/nc-load-tree/main.py > neetcode/questions.json
//
//go:embed questions.json
var rawGroups []byte

type Group struct {
	Name      string     `json:"group_name"`
	Questions []Question `json:"questions"`
}

type Question struct {
	Name       string `json:"name"`
	Difficulty string `json:"difficulty"`
	LCLink     string `json:"lc_link"`
	FreeLink   string `json:"free_link"`
}

func Groups() ([]Group, error) {
	var groups []Group
	err := json.Unmarshal(rawGroups, &groups)
	if err != nil {
		return nil, fmt.Errorf("parse rawGroups: %w", err)
	}

	for _, g := range groups {
		slices.SortFunc(g.Questions, func(u, v Question) int {
			return DifficultyToSortOrder(u.Difficulty) - DifficultyToSortOrder(v.Difficulty)
		})
	}
	return groups, err
}

func DifficultyToSortOrder(difficulty string) int {
	switch difficulty {
	case "easy":
		return 0
	case "medium":
		return 1
	case "hard":
		return 2
	}
	return -1
}
